<s:VisualStateAwarePage
    x:Name="Page"
    x:Class="RPGM.Notes.Views.NotePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:a="using:RPGM.Notes.Actions"
    xmlns:c="using:RPGM.Notes.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ctrl="using:RPGM.Notes.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="using:RPGM.Notes.DesignData"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="using:Microsoft.Practices.Prism.Mvvm"
    xmlns:s="using:Microsoft.Practices.Prism.StoreApps"
    xmlns:v="using:RPGM.Notes.Views"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    d:DataContext="{d:DesignInstance Type=dd:Note, IsDesignTimeCreatable=True}"
    mc:Ignorable="d"
    p:ViewModelLocator.AutoWireViewModel="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    RequestedTheme="Light">
    
    <Page.Resources>
        <c:BooleanNegateConverter x:Key="BoolNegate" />
        <Style x:Key="BackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Grid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HeaderTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilySemiLight}"/>
            <Setter Property="FontSize" Value="57.5"/>
            <Setter Property="FontWeight" Value="SemiLight"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Margin" Value="{ThemeResource TextControlMarginThemeThickness}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
            <Setter Property="Padding" Value="0,0.5,8,0"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyContentElement" />
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Normal" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border
                                x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                />
                            <Border
                                x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                />
                            <TextBlock
                                x:Name="ReadOnlyContentElement"
                                Margin="{TemplateBinding BorderThickness}"
                                Opacity="0"
                                OpticalMarginAlignment="TrimSideBearings"
                                Padding="{TemplateBinding Padding}"
                                Text="{TemplateBinding Text}"
                                />
                            <ScrollViewer
                                x:Name="ContentElement"
                                AutomationProperties.AccessibilityView="Raw"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsTabStop="False"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                Margin="{TemplateBinding BorderThickness}"
                                MinHeight="{ThemeResource TextControlThemeMinHeight}"
                                Padding="{TemplateBinding Padding}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="Disabled"
                                />
                            <!-- When the placeholder becomes visible the TextBox height increases slightly -->
                            <ContentControl
                                x:Name="PlaceholderTextContentPresenter"
                                Content="{TemplateBinding PlaceholderText}"
                                Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}"
                                IsHitTestVisible="False"
                                IsTabStop="False"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RichEditBoxStyle" TargetType="RichEditBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontSize" Value="{ThemeResource ContentControlFontSize}"/>
            <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
            <Setter Property="Margin" Value="19,0"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="Padding" Value="0,0,0,20"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RichEditBox">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledHeaderForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxFocusedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border
                                x:Name="BorderElement"
                                Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                />
                            <ContentPresenter
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Margin="{ThemeResource TextControlHeaderMarginThemeThickness}"
                                Style="{StaticResource HeaderContentPresenterStyle}"
                                />
                            <ScrollViewer
                                x:Name="ContentElement"
                                Grid.Row="1"
                                AutomationProperties.AccessibilityView="Raw"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsTabStop="False"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                Margin="0"
                                MinHeight="{ThemeResource TextControlThemeMinHeight}"
                                Padding="{TemplateBinding Padding}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="Disabled"
                                />
                            <ContentControl
                                x:Name="PlaceholderTextContentPresenter"
                                Grid.Row="1"
                                Content="{TemplateBinding PlaceholderText}"
                                Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}"
                                IsHitTestVisible="False"
                                IsTabStop="False"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <ContinuumNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button
            Grid.Row="0"
            Command="{Binding GoHomeCommand, ElementName=Page}"
            Margin="19,2,0,-9.5"
            Style="{StaticResource BackButtonStyle}">
            <TextBlock
                FontFamily="{StaticResource PhoneFontFamilySemiBold}"
                Style="{ThemeResource TitleTextBlockStyle}">
                <Run FontFamily="Segoe UI Symbol" Text="&#xE016;" />
                <Run x:Uid="ApplicationTitle" Text="ROLEPLAY GAME MANAGER" />
            </TextBlock>
        </Button>

        <ScrollViewer x:Name="ScrollViewer" Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBox
                    x:Name="TitleBox"
                    x:Uid="TextBoxTitle"
                    ContinuumNavigationTransitionInfo.IsEntranceElement="{Binding IsNew, Converter={StaticResource BoolNegate}}"
                    Grid.Row="0"
                    FontSize="42"
                    FontWeight="ExtraBlack"
                    IsEnabled="{Binding IsEditMode}"
                    Margin="19,0,0,0"
                    PlaceholderText="Title"
                    Style="{StaticResource HeaderTextBoxStyle}"
                    Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    />
                <Canvas
                    Grid.Row="1"
                    Background="{ThemeResource TextBoxPlaceholderTextThemeBrush}"
                    Height="2.5"
                    Margin="19,0"
                    />
                <!-- TODO: Merge these 3 controls into a single user control -->
                <Canvas
                    Grid.Row="2"
                    Background="Transparent"
                    Tapped="OnCanvasTapped"
                    />
                <RichEditBox
                    x:Name="RtfContentBox"
                    x:Uid="TextBoxRtfContent"
                    Grid.Row="2"
                    FontFamily="Segoe UI"
                    IsEnabled="{Binding IsEditMode}"
                    Margin="19,0"
                    PlaceholderText="Enter your note here..."
                    ScrollViewer.VerticalScrollMode="Disabled"
                    Style="{StaticResource RichEditBoxStyle}"
                    TextWrapping="Wrap">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="GotFocus">
                            <core:ChangePropertyAction PropertyName="IsFormatEnabled" TargetObject="{Binding}" Value="True" />
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="LostFocus">
                            <core:ChangePropertyAction PropertyName="IsFormatEnabled" TargetObject="{Binding}" Value="False" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </RichEditBox>
                <ctrl:RichEditBoxLinker
                    Grid.Row="2"
                    IsEnabled="{Binding IsEditMode, Converter={StaticResource BoolNegate}}"
                    RichEditBox="{Binding ElementName=RtfContentBox}">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Navigate">
                            <a:NavigateToNoteAction />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ctrl:RichEditBoxLinker>
            </Grid>
        </ScrollViewer>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar Visibility="{Binding Path=TextFormat.IsOpen, Converter={StaticResource BoolToInvisibility}}">
            <CommandBar.PrimaryCommands>
                <AppBarButton
                    x:Uid="AppBarEdit"
                    Command="{Binding EditCommand}"
                    Icon="Edit"
                    Label="edit"
                    Visibility="{Binding IsEditMode, Converter={StaticResource BoolToInvisibility}}"
                    />
                <AppBarButton
                    x:Uid="AppBarSave"
                    Command="{Binding SaveCommand}"
                    Icon="Save"
                    Label="save"
                    Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}}"
                    />
                <AppBarButton
                    x:Uid="AppBarFormat"
                    Icon="Font"
                    IsEnabled="{Binding IsFormatEnabled}"
                    Label="format"
                    Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}}">
                    <AppBarButton.Flyout>
                        <v:TextFormatFlyout
                            Closed="OnFlyoutClosed"
                            DataContext="{Binding TextFormat}"
                            IsOpen="{Binding Path=TextFormat.IsOpen, Mode=TwoWay}"
                            Placement="Full"
                            />
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Uid="AppBarDiscard"
                    Command="{Binding DiscardCommand}"
                    Label="discard changes"
                    />
                <AppBarButton
                    x:Uid="AppBarDelete"
                    Command="{Binding DeleteCommand}"
                    Label="delete"
                    />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</s:VisualStateAwarePage>
